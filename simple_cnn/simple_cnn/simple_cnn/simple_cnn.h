#ifndef SIMPLE_CNN_H

#define SIMPLE_CNN_H

#define INPUT_IMAGE_SIZE 28
#define TOTAL_OUTPUT_CLASSES 10
#define CONV_KERNEL_SIZE 5
#define TOTAL_KERNELS 6
#define CONV_OUTPUT_SIZE 24
#define MAX_POOL_WINDOW_SIZE 2
#define MAX_POOL_STRIDE 2
#define MAX_POOL_OUTPUT_SIZE 12
#define TOTAL_CONV_WEIGHTS (TOTAL_KERNELS * CONV_KERNEL_SIZE * CONV_KERNEL_SIZE)
#define TOTAL_LINEAR_WEIGHTS (TOTAL_OUTPUT_CLASSES * TOTAL_KERNELS * MAX_POOL_OUTPUT_SIZE * MAX_POOL_OUTPUT_SIZE) 

typedef unsigned char IMAGE[INPUT_IMAGE_SIZE][INPUT_IMAGE_SIZE];
typedef char CONV_WEIGHT_MATRIX[TOTAL_KERNELS][CONV_KERNEL_SIZE][CONV_KERNEL_SIZE];
typedef char CONV_BIAS_MATRIX[TOTAL_KERNELS];
typedef int CONV_OUTPUT_MATRIX[CONV_OUTPUT_SIZE][CONV_OUTPUT_SIZE];
typedef int CONV_MAX_POOL_OUTPUT_MATRIX[TOTAL_KERNELS][MAX_POOL_OUTPUT_SIZE][MAX_POOL_OUTPUT_SIZE];

int relu(int x);

void convolution_max_pool(IMAGE input, CONV_WEIGHT_MATRIX weights, CONV_BIAS_MATRIX biases, CONV_MAX_POOL_OUTPUT_MATRIX output);

void max_pool(int k, CONV_OUTPUT_MATRIX input, CONV_MAX_POOL_OUTPUT_MATRIX output);

#endif 